name: Deploy to Kubernetes

on:
  push:
    branches:
      - main  # Trigger on pushes to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Specify the operating system for the runner

    steps:
      # Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.REPO_NAME }}/${{ secrets.IMAGE_NAME }} .
          docker push ${{ secrets.REPO_NAME }}/${{ secrets.IMAGE_NAME }}:latest
          
      - name: Install gridscalecloud
        run: |
          curl -LO https://github.com/gridscale/gscloud/releases/download/v0.13.0/gscloud_0.13.0_linux_amd64.zip
          unzip gscloud_0.13.0_linux_amd64.zip
          sudo mv gscloud /usr/local/bin/
          sudo chmod +x /usr/local/bin/gscloud
          gscloud version

      - name: Create gridscale directory
        run: mkdir -p $HOME/.config/gridscale/
        
      # Set up Gridscale Configuration
      - name: Set up Gridscale Configuration
        run: |
          echo "${{ secrets.CONFIG_FILE }}" > $HOME/.config/gridscale/config.yaml
          gscloud --config $HOME/.config/gridscale/config.yaml make-config

      #- name: Print contents of config.yaml
       #run: cat $HOME/.config/gridscale/config.yaml


      - name: Change directory to gridscale
        run: cd $HOME/.config/gridscale/

      # Retrieve Kubeconfig Secret
      - name: Retrieve Kubeconfig Secret
        run: |
          mkdir ~/.kube/
          # Retrieve kubeconfig from secret management service
          # and store it in a file
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/hello-application-kubeconfig.yaml

      # Export KUBECONFIG
      - name: Export KUBECONFIG
        run: export KUBECONFIG=$HOME/.kube/hello-application-kubeconfig.yaml

      #- name: Print contents of config.yaml
       # run: cat $HOME/.kube/hello-application-kubeconfig.yaml

      # Deploy to Kubernetes Cluster
      - name: Copy HELLO_APP_DEPLOYMENT to file
        run: |
          echo "${{ secrets.HELLO_APP_DEPLOYMENT }}" > hello-application-deployment.yaml
          echo pwd

      - name: Deploy to Kubernetes Cluster
        run: |
          kubectl create -f hello-application-deployment.yaml

